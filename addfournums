%include "asm_io.inc"
segment .data

  ;making the output lines
  
  prompt1 db "Enter the 1st number: ",0
  prompt2 db "Enter the 2nd number: ",0
  prompt3 db "Enter the 3rd number: ",0
  prompt4 db "Enter the 4th number: ",0
  outmsg1 db "The result is: ",0

segment .bss

  ;creating all the variables
  
  input1 resd 1
  input2 resd 1
  input3 resd 1
  input4 resd 1
  
segment .text

  global asm_main
asm_main:

  enter 0,0
  pusha
  
  mov eax, prompt1
  call print_string     ;alternating between printing the lines
  
  call read_int         ;and reading and storing the user's input
  mov[input1], eax
  
  mov eax, prompt2
  call print_string
  
  call read_int
  mov[input2], eax
  
  mov eax, prompt3
  call print_string
  
  call read_int
  mov[input3], eax
  
  mov eax, prompt4
  call print_string
  
  call read_int
  mov[input4], eax
  
  mov eax, [input1]             ;adding the inputs up
  add eax, [input2]
  add eax, [input3]
  add eax, [input4]
  mov ebx, eax                  ;store total in ebx
  
  mov eax, outmsg1
  call print_string             ;print the output message
  mov eax, ebx                  ;move total back to eax
  call print_int                ;print the total
  call print_nl                 ;print a new line
  
  popa
  mov eax, 0
  leave
  ret
  
  
  
  
  
